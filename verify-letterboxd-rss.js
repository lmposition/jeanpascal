/**
 * Script de v√©rification du nouveau syst√®me RSS Letterboxd
 * Usage: node verify-letterboxd-rss.js
 */

import { LetterboxdService } from './dist/services/letterboxdService.js';
import dotenv from 'dotenv';

// Charger les variables d'environnement
dotenv.config();

const TMDB_API_KEY = process.env.TMDB_API_KEY || '';

async function testLetterboxdRSS() {
  console.log('üß™ TEST DU NOUVEAU SYST√àME RSS LETTERBOXD\n');
  console.log('‚ïê'.repeat(80));
  
  const service = new LetterboxdService(TMDB_API_KEY);
  
  // Test 1: Validation d'un utilisateur
  console.log('\nüìã TEST 1: Validation d\'utilisateur');
  console.log('‚îÄ'.repeat(80));
  const isValid = await service.isValidUsername('limposition');
  console.log(`R√©sultat: ${isValid ? '‚úÖ VALIDE' : '‚ùå INVALIDE'}`);
  
  if (!isValid) {
    console.log('\n‚ùå L\'utilisateur n\'est pas valide, arr√™t des tests.');
    return;
  }
  
  // Test 2: R√©cup√©ration du dernier avis
  console.log('\nüìã TEST 2: R√©cup√©ration du dernier avis');
  console.log('‚îÄ'.repeat(80));
  const latestReview = await service.getUserReviews('limposition', true);
  
  if (latestReview.length > 0) {
    const review = latestReview[0];
    console.log('\n‚úÖ Dernier avis r√©cup√©r√©:');
    console.log(`   Titre: ${review.title}`);
    console.log(`   Ann√©e: ${review.year || 'N/A'}`);
    console.log(`   Note: ${review.rating ? `${review.rating}/5` : 'Pas de note'}`);
    console.log(`   Date: ${review.reviewDate}`);
    console.log(`   URL: ${review.reviewUrl}`);
    console.log(`   Image: ${review.coverImage ? '‚úÖ Pr√©sente' : '‚ùå Absente'}`);
    console.log(`   Contenu (${review.reviewText.length} caract√®res):`);
    console.log(`   "${review.reviewText.substring(0, 200)}${review.reviewText.length > 200 ? '...' : ''}"`);
  } else {
    console.log('‚ùå Aucun avis r√©cup√©r√©');
  }
  
  // Test 3: R√©cup√©ration de tous les avis (limit√© √† 5)
  console.log('\nüìã TEST 3: R√©cup√©ration de tous les avis (max 5)');
  console.log('‚îÄ'.repeat(80));
  const allReviews = await service.getUserReviews('limposition', false);
  console.log(`\n‚úÖ ${allReviews.length} avis r√©cup√©r√©s au total`);
  
  allReviews.slice(0, 5).forEach((review, index) => {
    console.log(`\n${index + 1}. ${review.title}`);
    console.log(`   Note: ${review.rating ? `${review.rating}/5` : 'Pas de note'}`);
    console.log(`   Contenu: ${review.reviewText ? `${review.reviewText.length} caract√®res` : 'Pas de contenu'}`);
  });
  
  console.log('\n' + '‚ïê'.repeat(80));
  console.log('‚úÖ TESTS TERMIN√âS\n');
}

// Ex√©cution
testLetterboxdRSS().catch(error => {
  console.error('\n‚ùå ERREUR LORS DES TESTS:', error);
  process.exit(1);
});
